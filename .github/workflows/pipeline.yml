name: lint → test → measure → db → sast → integration

on:
  pull_request:
    branches:
      - main
      - master

jobs:
  lint:
    name: 🔎 Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Source Code
        uses: actions/checkout@v4

      - name: 🛠 Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Download Node modules
        run: npm ci

      - name: ✅ Run ESLint
        run: npm run lint

      - name: 🎨 Check Prettier formatting
        run: npx prettier --check "src/**/*.js" "tests/**/*.js" "*.json"

  test:
    name: ✅ Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Source Code
        uses: actions/checkout@v4

      - name: 🛠 Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Download Node modules
        run: npm ci

      - name: 🧪 Run Unit Tests with Coverage
        run: npm run test:unit

      - name: ⬆️ Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

  measure:
    name: 📊 Coverage / Measuring Unit
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Source Code
        uses: actions/checkout@v4

      - name: 🛠 Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Download Node modules
        run: npm ci

      - name: ⬇️ Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage/

      - name: 📊 Enforce Coverage Threshold (80%)
        run: |
          npm run test:coverage
          COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Coverage too low! Required: 80%, Actual: $COVERAGE%"
            exit 1
          else
            echo "✅ Coverage meets threshold: $COVERAGE%"
          fi

  db:
    name: 🗄 Database Migration
    needs: measure
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Source Code
        uses: actions/checkout@v4

      - name: 🛠 Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Download Node modules
        run: npm ci

      - name: 🗄 Run Database Migration Script
        run: npm run db:migrate

  sast:
    name: 🛡 SAST Security Scan
    needs: db
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Source Code
        uses: actions/checkout@v4

      - name: 🛠 Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Download Node modules
        run: npm ci

      - name: 🔍 Static Application Security Testing
        run: npm run sast

      - name: 🔒 NPM Security Audit
        run: npm audit --audit-level moderate

  integration:
    name: 🔗 Integration Tests
    needs: sast
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Source Code
        uses: actions/checkout@v4

      - name: 🛠 Setup Node.js with cache
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Download Node modules
        run: npm ci

      - name: 🧪 Run Integration Tests
        run: npm run test:integration
